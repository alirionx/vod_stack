trigger:
- master

pool:
  vmImage: ubuntu-22.04

variables:
  containerRegistryName: itarchinnolab

steps:
#----------------------------------
- script: |
    apt update && apt install python3-pip -y
    pip install -r ./requirements.txt
    pip install pyinstaller
    pyinstaller --onefile --name media_api_exec media_api/src/app.py
  displayName: 'media_api build python executable (one-file)'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: './media_api_exec'
    artifactName: media_api_exec
  displayName: 'publish media_api executable as artifact'

#----------------------------------
- script: |
    apt update && apt install python3-pip -y
    pip install -r ./requirements.txt
    pip install pyinstaller
    pyinstaller --onefile --name media_api_exec vod_api/src/app.py
  displayName: 'vod_api build python executable (one-file)'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: './vod_api_exec'
    artifactName: vod_api_exec
  displayName: 'publish vod_api executable as artifact'

#----------------------------------
- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: $(containerRegistryName)

- task: Docker@2
  displayName: Build docker image media_api (latest master)
  inputs:
    repository: vod_stack/media_api
    command: buildAndPush
    Dockerfile: ./media_api/Dockerfile
    containerRegistry: $(containerRegistryName)
    tags: latest

- task: Docker@2
  displayName: Build docker image vod_api (latest master)
  inputs:
    repository: vod_stack/vod_api
    command: buildAndPush
    Dockerfile: ./vod_api/Dockerfile
    containerRegistry: $(containerRegistryName)
    tags: latest
    
#----------------------------------